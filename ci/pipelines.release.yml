updateCommitStatus: &UPDATE_COMMIT_STATUS update_commit_status javaClientReleaseGit --context "$step_name"

pipelines:
  - name: release_java_client
    configuration:
      runtime:
        type: image
        image:
          auto:
            language: java
            versions:
              - "8.0.0"
      environmentVariables:
        readOnly:
          NEXT_VERSION: 0.0.0
          NEXT_DEVELOPMENT_VERSION: 0.0.x-SNAPSHOT

    steps:
      - name: Release
        type: Bash
        configuration:
          inputResources:
            - name: javaClientReleaseGit
          integrations:
            - name: ojo
            - name: github_generic
        execution:
          onStart:
            - *UPDATE_COMMIT_STATUS
            - restore_cache_files gradle_cache $res_javaClientReleaseGit_resourcePath/.gradle
          onExecute:
            - cd $res_javaClientReleaseGit_resourcePath

            # Set env
            - export CI=true
            - export JFROG_CLI_BUILD_NAME=artifactory-client-java
            - export JFROG_CLI_BUILD_NUMBER=$run_number

            # Configure git
            - git checkout master
            - git remote set-url origin https://$int_github_generic_token@github.com/jfrog/artifactory-client-java.git

            # Make sure versions provided
            - echo "Checking variables"
            - test -n "$NEXT_VERSION" -a "$NEXT_VERSION" != "0.0.0"
            - test -n "$NEXT_DEVELOPMENT_VERSION" -a "$NEXT_DEVELOPMENT_VERSION" != "0.0.x-SNAPSHOT"

            # Download JFrog CLI
            - curl -fL https://getcli.jfrog.io | sh && chmod +x jfrog

            # Configure JFrog CLI
            - ./jfrog rt c ojo --url $int_ojo_rt_url --access-token=$int_ojo_rt_token
            - ./jfrog rt gradlec --use-wrapper --deploy-ivy-desc=false --deploy-maven-desc=false --uses-plugin
              --server-id-resolve ojo --repo-resolve jcenter
              --server-id-deploy ojo --repo-deploy oss-release-local

            # Sync changes with dev
            - git merge origin/dev

            # Update version
            - sed -i "s/\(currentVersion=\).*\$/\1${NEXT_VERSION}/" gradle.properties
            - git commit -am "[artifactory-release] Release version ${NEXT_VERSION} [skipRun]" --allow-empty
            - git tag ${NEXT_VERSION}
            - git push
            - git push --tags

            # Run build and publish
            - >
              env -i PATH=$PATH HOME=$HOME GRADLE_OPTS=-Dorg.gradle.daemon=false
              JFROG_CLI_BUILD_NAME=$JFROG_CLI_BUILD_NAME
              JFROG_CLI_BUILD_NUMBER=$JFROG_CLI_BUILD_NUMBER
              ./jfrog rt gradle clean artifactoryPublish -x test
            - ./jfrog rt bp

            # Update next development version
            - sed -i "s/\(currentVersion=\).*\$/\1${NEXT_DEVELOPMENT_VERSION}/" gradle.properties
            - git commit -am "[artifactory-release] Next development version [skipRun]"
            - git push
            - git push origin dev

          onComplete:
            - *UPDATE_COMMIT_STATUS

            # Save gradle cache
            - add_cache_files $res_javaClientReleaseGit_resourcePath/.gradle gradle_cache
